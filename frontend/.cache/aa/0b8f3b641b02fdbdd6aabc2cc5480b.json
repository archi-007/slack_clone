{"id":"node_modules/rc-tree/es/contextTypes.js","dependencies":[{"name":"/home/archisman/Desktop/slack/slack_clone/frontend/package.json","includedInParent":true,"mtime":1587918806291},{"name":"/home/archisman/Desktop/slack/slack_clone/frontend/.babelrc","includedInParent":true,"mtime":1587563311872},{"name":"/home/archisman/Desktop/slack/slack_clone/frontend/node_modules/rc-tree/package.json","includedInParent":true,"mtime":1587747883294},{"name":"react","loc":{"line":5,"column":23},"parent":"/home/archisman/Desktop/slack/slack_clone/frontend/node_modules/rc-tree/es/contextTypes.js","resolved":"/home/archisman/Desktop/slack/slack_clone/frontend/node_modules/react/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TreeContext = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * Webpack has bug for import loop, which is not the same behavior as ES module.\n * When util.js imports the TreeNode for tree generate will cause treeContextTypes be empty.\n */\nvar TreeContext = React.createContext(null);\nexports.TreeContext = TreeContext;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/rc-tree/es/contextTypes.js","original":{"line":5,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/rc-tree/es/contextTypes.js","original":{"line":1,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/rc-tree/es/contextTypes.js","original":{"line":6,"column":7}},{"name":"TreeContext","generated":{"line":18,"column":4},"source":"node_modules/rc-tree/es/contextTypes.js","original":{"line":6,"column":11}},{"generated":{"line":18,"column":15},"source":"node_modules/rc-tree/es/contextTypes.js","original":{"line":6,"column":22}},{"name":"React","generated":{"line":18,"column":18},"source":"node_modules/rc-tree/es/contextTypes.js","original":{"line":6,"column":25}},{"generated":{"line":18,"column":23},"source":"node_modules/rc-tree/es/contextTypes.js","original":{"line":6,"column":30}},{"name":"createContext","generated":{"line":18,"column":24},"source":"node_modules/rc-tree/es/contextTypes.js","original":{"line":6,"column":31}},{"generated":{"line":18,"column":37},"source":"node_modules/rc-tree/es/contextTypes.js","original":{"line":6,"column":25}},{"generated":{"line":18,"column":38},"source":"node_modules/rc-tree/es/contextTypes.js","original":{"line":6,"column":45}},{"generated":{"line":18,"column":42},"source":"node_modules/rc-tree/es/contextTypes.js","original":{"line":6,"column":25}},{"generated":{"line":18,"column":43},"source":"node_modules/rc-tree/es/contextTypes.js","original":{"line":6,"column":7}}],"sources":{"node_modules/rc-tree/es/contextTypes.js":"/**\n * Webpack has bug for import loop, which is not the same behavior as ES module.\n * When util.js imports the TreeNode for tree generate will cause treeContextTypes be empty.\n */\nimport * as React from 'react';\nexport var TreeContext = React.createContext(null);"},"lineCount":null}},"error":null,"hash":"015c6f3c8df23672136a1f950c3f105e","cacheData":{"env":{}}}